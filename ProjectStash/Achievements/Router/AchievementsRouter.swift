//
//  AchievementsRouter.swift
//  ProjectStash
//
//  Created Julio Reyes on 7/25/18.
//  Copyright © 2018 Julio Reyes. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class AchievementsRouter: AchievementsWireframeProtocol {
    weak var viewController: UIViewController?

    class func createAchievementsModule() -> UIViewController {
        let navController = mainStoryboard.instantiateViewController(withIdentifier: "StashNavigationController")
        let store = CoreDataStack()
        // Change to get view from storyboard if not using progammatic UI
        guard let view = navController.childViewControllers.first as? AchievementsViewController else {
            return UIViewController()
        }
        let interactor: AchievementsInteractorProtocol & LocalDataManagerOutputProtocol = AchievementsInteractor()
        let wireFrameRouter: AchievementsWireframeProtocol = AchievementsRouter()
        let dataManager: LocalDataManagerInputProtocol = DataManager()
        
        let presenter: AchievementsPresenterProtocol  = AchievementsPresenter(interface: view, interactor: interactor, router: wireFrameRouter) as AchievementsPresenterProtocol
        
        dataManager.outputHandler = interactor
        dataManager.CoreDataStore = store
        view.presenter = presenter
        presenter.view = view
        presenter.wireFrame = wireFrameRouter
        presenter.interactor = interactor
        interactor.presenter = presenter
        interactor.dataManager = dataManager
        
        return navController
    }
    
    
    static var mainStoryboard: UIStoryboard{
        return UIStoryboard(name: "Main", bundle: Bundle.main)
    }

}
