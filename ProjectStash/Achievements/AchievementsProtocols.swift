//
//  AchievementsProtocols.swift
//  ProjectStash
//
//  Created Julio Reyes on 7/25/18.
//  Copyright © 2018 Julio Reyes. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import UIKit


//MARK: View -
protocol AchievementsViewProtocol: class {
    var presenter: AchievementsPresenterProtocol?  { get set }
    
    // PRESENTER -> VIEW
    func showAchievements(forInvestor investor: [InvestorModel])
}
//MARK: Interactor -
protocol AchievementsInteractorProtocol: class {
    var presenter: AchievementsPresenterProtocol?  { get set }
    var dataManager: LocalDataManagerInputProtocol? { get set}
    
    // PRESENTER -> INTERACTOR
    func retrieveInvestorList()
}

//MARK: Presenter - Entity
protocol AchievementsPresenterProtocol: class {
    var view: AchievementsViewProtocol? { get set }
    var wireFrame: AchievementsWireframeProtocol? { get set }
    var interactor: AchievementsInteractorProtocol? { get set}
    var investor: InvestorModel? { get set }
    
    // View logic -> Presenter
    func viewDidLoad()
    func didRetrieveAchievements(_ investor: [InvestorModel])
}

//MARK: Router/Wireframe -
protocol AchievementsWireframeProtocol: class {
    static func createAchievementsModule() -> UIViewController
}

//MARK: Data Manager- with Input/Output protocals
protocol LocalDataManagerInputProtocol: class {
    
    var CoreDataStore: CoreDataStack? { get set}
    var outputHandler: LocalDataManagerOutputProtocol? { get set }

    // INTERACTOR -> DATAMANAGER
    func retrieveInvestorList() throws -> [Investor]
    func retrieveInformationFromJSON()
    func savePost(overview: Overview, achievements: [Achievements] ) throws 
}

protocol LocalDataManagerOutputProtocol: class {
    // DATAMANAGER -> INTERACTOR
    func onAchievementsRetrieved(_ investor: [InvestorModel]) throws
}
